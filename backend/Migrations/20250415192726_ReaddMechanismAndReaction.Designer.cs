// <auto-generated />
using System;
using ChemistryCafeAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChemistryCafeAPI.Migrations
{
    [DbContext(typeof(ChemistryDbContext))]
    [Migration("20250415192726_ReaddMechanismAndReaction")]
    partial class ReaddMechanismAndReaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ChemistryCafeAPI.Models.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Mechanism", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Mechanisms");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.MechanismReaction", b =>
                {
                    b.Property<Guid>("MechanismId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ReactionId")
                        .HasColumnType("char(36)");

                    b.HasKey("MechanismId", "ReactionId");

                    b.HasIndex("ReactionId");

                    b.ToTable("MechanismReactions");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.MechanismSpecies", b =>
                {
                    b.Property<Guid>("MechanismId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("char(36)");

                    b.HasKey("MechanismId", "SpeciesId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("MechanismSpecies");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Phase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("MechanismId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MechanismId");

                    b.ToTable("Phases");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Branch")
                        .HasColumnType("longtext");

                    b.Property<double?>("Coefficient")
                        .HasColumnType("double");

                    b.Property<Guid>("ReactionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ReactionId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reactant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double?>("Coefficient")
                        .HasColumnType("double");

                    b.Property<Guid>("ReactionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ReactionId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Reactants");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Species", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Attributes")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PhaseId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("PhaseId");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleId")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "idx_users_username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Family", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Mechanism", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Family", "Family")
                        .WithMany("Mechanisms")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.MechanismReaction", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Mechanism", "Mechanism")
                        .WithMany("MechanismReactions")
                        .HasForeignKey("MechanismId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemistryCafeAPI.Models.Reaction", "Reaction")
                        .WithMany("MechanismReactions")
                        .HasForeignKey("ReactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mechanism");

                    b.Navigation("Reaction");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.MechanismSpecies", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Mechanism", "Mechanism")
                        .WithMany("MechanismSpecies")
                        .HasForeignKey("MechanismId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemistryCafeAPI.Models.Species", "Species")
                        .WithMany("MechanismSpecies")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mechanism");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Phase", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Mechanism", "Mechanism")
                        .WithMany("Phases")
                        .HasForeignKey("MechanismId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mechanism");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Product", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Reaction", "Reaction")
                        .WithMany("Products")
                        .HasForeignKey("ReactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemistryCafeAPI.Models.Species", "Species")
                        .WithMany("AsProduct")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reaction");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reactant", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Reaction", "Reaction")
                        .WithMany("Reactants")
                        .HasForeignKey("ReactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemistryCafeAPI.Models.Species", "Species")
                        .WithMany("AsReactant")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reaction");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reaction", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Family", "Family")
                        .WithMany("Reactions")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Species", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Family", "Family")
                        .WithMany("Species")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChemistryCafeAPI.Models.Phase", "Phase")
                        .WithMany("Species")
                        .HasForeignKey("PhaseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Family");

                    b.Navigation("Phase");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Family", b =>
                {
                    b.Navigation("Mechanisms");

                    b.Navigation("Reactions");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Mechanism", b =>
                {
                    b.Navigation("MechanismReactions");

                    b.Navigation("MechanismSpecies");

                    b.Navigation("Phases");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Phase", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reaction", b =>
                {
                    b.Navigation("MechanismReactions");

                    b.Navigation("Products");

                    b.Navigation("Reactants");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Species", b =>
                {
                    b.Navigation("AsProduct");

                    b.Navigation("AsReactant");

                    b.Navigation("MechanismSpecies");
                });
#pragma warning restore 612, 618
        }
    }
}
