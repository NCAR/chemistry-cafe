// <auto-generated />
using System;
using ChemistryCafeAPI.Controllers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChemistryCafeAPI.Migrations
{
    [DbContext(typeof(ChemistryCafeContext))]
    [Migration("20250320054732_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ChemistryCafeAPI.Models.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedDate = new DateTime(2025, 3, 20, 5, 47, 32, 35, DateTimeKind.Utc).AddTicks(2650),
                            Description = "Water is a chemical compound with the formula H2O. It is a transparent, tasteless, odorless, and nearly colorless chemical substance, and it is the main constituent of Earth's hydrosphere and the fluids of all known living organisms.",
                            IsPublic = true,
                            Name = "Water",
                            OwnerId = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.InitialConditions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double?>("AbsConvergenceTolerance")
                        .HasColumnType("double");

                    b.Property<string>("AdditionalConditions")
                        .HasColumnType("longtext");

                    b.Property<double?>("Concentration")
                        .HasColumnType("double");

                    b.Property<double?>("DiffusionCoefficient")
                        .HasColumnType("double");

                    b.Property<double?>("FixedConcentration")
                        .HasColumnType("double");

                    b.Property<double?>("MolecularWeight")
                        .HasColumnType("double");

                    b.Property<double?>("Pressure")
                        .HasColumnType("double");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("char(36)");

                    b.Property<double?>("Temperature")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId")
                        .IsUnique();

                    b.ToTable("InitialConditions");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Mechanism", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReactionIds")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SpeciesIds")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Mechanisms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreatedDate = new DateTime(2025, 3, 20, 5, 47, 32, 35, DateTimeKind.Utc).AddTicks(2630),
                            Description = "Rocket Launch",
                            FamilyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "Rocket Launch",
                            ReactionIds = "[]",
                            SpeciesIds = "[]"
                        });
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Properties", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double?>("Concentration")
                        .HasColumnType("double");

                    b.Property<double?>("Diffusion")
                        .HasColumnType("double");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("char(36)");

                    b.Property<double?>("Tolerance")
                        .HasColumnType("double");

                    b.Property<double?>("Weight")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId")
                        .IsUnique();

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Reactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CreatedDate = new DateTime(2025, 3, 20, 5, 47, 32, 35, DateTimeKind.Utc).AddTicks(2610),
                            FamilyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "Hydrogen Combustion"
                        });
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.ReactionComponent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double?>("Coefficient")
                        .HasColumnType("double");

                    b.Property<Guid>("ReactionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpeciesId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReactionId");

                    b.ToTable("ReactionComponent");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Species", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedDate = new DateTime(2025, 3, 20, 5, 47, 32, 35, DateTimeKind.Utc).AddTicks(2580),
                            FamilyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "H2O"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreatedDate = new DateTime(2025, 3, 20, 5, 47, 32, 35, DateTimeKind.Utc).AddTicks(2590),
                            FamilyId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "H2"
                        });
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleId")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedDate = new DateTime(2025, 3, 20, 5, 47, 32, 35, DateTimeKind.Utc).AddTicks(2490),
                            Email = "jackson.stewart@tamu.edu",
                            Role = "admin",
                            Username = "jackson.stewart"
                        });
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Family", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.User", null)
                        .WithMany("OwnedFamilies")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.InitialConditions", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Species", "Species")
                        .WithOne("InitialConditions")
                        .HasForeignKey("ChemistryCafeAPI.Models.InitialConditions", "SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Mechanism", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Family", "Family")
                        .WithMany("Mechanisms")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Properties", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Species", "Species")
                        .WithOne("Properties")
                        .HasForeignKey("ChemistryCafeAPI.Models.Properties", "SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reaction", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Family", "Family")
                        .WithMany("Reactions")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.ReactionComponent", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Reaction", null)
                        .WithMany("Components")
                        .HasForeignKey("ReactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Species", b =>
                {
                    b.HasOne("ChemistryCafeAPI.Models.Family", "Family")
                        .WithMany("Species")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Family", b =>
                {
                    b.Navigation("Mechanisms");

                    b.Navigation("Reactions");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Reaction", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.Species", b =>
                {
                    b.Navigation("InitialConditions");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("ChemistryCafeAPI.Models.User", b =>
                {
                    b.Navigation("OwnedFamilies");
                });
#pragma warning restore 612, 618
        }
    }
}
