name: Codecov Coverage

on:
  push:
    branches:
      - main
      - codecov_correction
  pull_request:
    branches:
      - main

jobs:
  Codecov-Publishing:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:9.0
        env:
          MYSQL_SERVER: mysql
          MYSQL_USER: chemistrycafedev
          MYSQL_PASSWORD: chemistrycafe
          MYSQL_DATABASE: chemistry_db
          MYSQL_ROOT_PASSWORD: testrootpassword
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Node environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Restore frontend dependencies
      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      # Build the project
      - name: Build
        run: npm run build
        working-directory: ./frontend

      # Step 5: Run tests and collect code coverage
      - name: Test and calculate coverage
        run: npm run test:coverage
        working-directory: ./frontend

      # Step 6: Upload the code coverage report to Codecov
      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend
          fail_ci_if_error: true

      # Step 7: Restore backend dependencies
      - name: Install backend dependencies
        run: dotnet restore
        working-directory: ./backend

      - name: Install entity framework tool
        run: dotnet tool install --global dotnet-ef

      - name: Migrate Database
        working-directory: ./backend
        env:
          MYSQL_SERVER: "127.0.0.1"
          MYSQL_USER: chemistrycafedev
          MYSQL_PASSWORD: chemistrycafe
          MYSQL_DATABASE: chemistry_db
          GOOGLE_CLIENT_ID: "" # Default value for testing
          GOOGLE_CLIENT_SECRET: "" # Default value for testing
        run: dotnet ef database update

      # Step 8: Run backend tests and collect code coverage
      - name: Test and collect backend coverage
        env:
          MYSQL_SERVER: "127.0.0.1"
          MYSQL_USER: chemistrycafedev
          MYSQL_PASSWORD: chemistrycafe
          MYSQL_DATABASE: chemistry_db
        run: dotnet test backend --collect:"Code Coverage;Format=cobertura" --settings backend/.runsettings

      # Step 9: Stop Docker
      - name: Stop docker
        run: docker compose down

      # Step 10: Install ReportGenerator
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Add .NET tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # Step 11: Generate backend test report
      - name: Generate backend test report
        run: reportgenerator -reports:"backend/TestResults/**/**.cobertura.xml" -targetdir:coveragereport -reporttypes:Html,lcov -classfilters:-MySqlConnector.* -filefilters:-/_/src/MySqlConnector/*,-backend/TestResults/**/coverage.cobertura.xml

        # Step 12: Upload the code coverage report to Codecov
      - name: Upload backend coverage to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend
          fail_ci_if_error: true
